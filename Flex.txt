
  .box{
    display: -webkit-flex; /* Safari */
    display: flex;
  }

  任何一个容器都可以指定为 Flex 布局。
  Webkit 内核的浏览器，必须加上-webkit前缀。


  .box{
    display: inline-flex;
  }

  行内元素也可以使用 Flex 布局.

  注意，设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。
  --------------------------------

  flex-direction
  flex-wrap
  flex-flow
  justify-content
  align-items
  align-content

  以上6个属性设置在容器上。
  --------------------------------

flex-direction属性

  .box {
      row（默认值）：主轴为水平方向，起点在左端。
      row-reverse：主轴为水平方向，起点在右端。
      column：主轴为垂直方向，起点在上沿。
      column-reverse：主轴为垂直方向，起点在下沿
   }

   flex-direction属性决定主轴的方向（即项目的排列方向）。
   --------------------------------

flex-wrap属性

  .box {
      flex-wrap:nowrap（默认）：不换行
      flex-wrap:wrap：换行，第一行在上方
      flex-wrap:wrap-reverse：换行，第一行在下方
  }

  flex-wrap属性定义，如果一条轴线排不下，如何换行。
  -----------------------------------

flex-flow

  .box {
      flex-flow: <flex-direction> || <flex-wrap>;
  }

  flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。
  ------------------------------------

justify-content属性

  .box {
    flex-start（默认值）：左对齐
    flex-end：右对齐
    center： 居中
    space-between：两端对齐，项目之间的间隔都相等。
    space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。
  }

  justify-content属性定义了项目在主轴上的对齐方式。
  ----------------------------------

align-items属性

  .box {
      flex-start：交叉轴的起点对齐。
      flex-end：交叉轴的终点对齐。
      center：交叉轴的中点对齐。
      baseline: 项目的第一行文字的基线对齐。
      stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。
  }

  align-items属性定义项目在交叉轴上如何对齐。
  --------------------------------------

align-content属性

  .box {
      flex-start：与交叉轴的起点对齐。
      flex-end：与交叉轴的终点对齐。
      center：与交叉轴的中点对齐。
      space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。
      space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。
      stretch（默认值）：轴线占满整个交叉轴。
   }

   align-content属性定义了\多根轴线/的对齐方式。

   如果项目只有一根轴线，该属性不起作用。
   ---------------------------------
     以下6个属性设置在项目上。
     order
     flex-grow
     flex-shrink
     flex-basis
     flex
     align-self
     ------------------------------

order属性

     .item {
        order: <integer>;
      }

      order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。
      ------------------------------

flex-grow属性

      .item {
          flex-grow: <number>; /* default 0 */
      }

      flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。

      如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。

      如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。
      ------------------------------

flex-shrink属性

      .item {
          flex-shrink: <number>; /* default 1 */
      }

      flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。

      如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。

      如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。
      -------------------------------------

flex-basis属性

    .item {
        flex-basis: <length> | auto; /* default auto */
    }

    flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。

    计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。

    它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。
    ---------------------------------------

 flex属性

      .item {
        flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
      }

      flex属性是flex-grow, flex-shrink 和 flex-basis的简写，

      默认值为0 1 auto。后两个属性可选。

      该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。
      ----------------------------------

align-self属性

    .item {
        align-self: auto | flex-start | flex-end | center | baseline | stretch;
    }

    align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性

    默认值为auto，表示继承父元素的align-items属性，

    如果没有父元素，则等同于stretch。
